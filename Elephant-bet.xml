<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="page3.css">
  <title>888Bets</title>
<style type="text/css" id="dcoder_stylesheet">body {
  margin: 0;
  padding: 0;
  overflow: hidden;
  background-color: #000;
  font-family: 'Courier New', monospace;
  color: #0f0; /* Cor verde t√≠pica de c√≥digo hacker */
}

.toolbar {
  background-color: transparent; /* Torna o fundo da barra de ferramentas transparente */
  color: #0f0;
  padding: 10px;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  border-bottom: 1px solid #0f0;
}

button {
  background-color: transparent;
  border: none;
  color: #0f0;
  cursor: pointer;
  padding: 5px 10px;
  font-family: 'Courier New', monospace;
  /* Adicione um efeito de texto distorcido */
  text-transform: uppercase;
  letter-spacing: 2px;
  font-weight: bold;
}

/* ... (mantenha o c√≥digo anterior) */

.time-square,
.random-number-square {
  background-color: transparent; /* Torna o fundo dos quadrados de tempo e n√∫meros aleat√≥rios transparente */
  color: #0f0;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 10px;
  border-radius: 5px;
  /* Adicione um efeito de texto distorcido */
  letter-spacing: 2px;
  font-weight: bold;
}

/* Estilize todos os elementos com a classe .info-square */
.info-square {
  position: relative; /* Permite posicionar elementos filhos relativamente a este elemento */
  background-color: transparent;
  font-size: 18px;
  padding: 10px;
  border-radius: 5px;
  /* Adicione outras propriedades de estilo conforme necess√°rio */
}
#currentTime,
#randomInfo {
  margin: 0;
}

iframe {
  position: absolute;
  top: 80px; /* Altura da barra de ferramentas */
  left: 0;
  width: 100%;
  height: calc(100% - 50px); /* Subtrai a altura da barra de ferramentas */
  border: none;
}

/* Estilize todos os elementos com a classe .random-time-square */
.random-time-square {
  background-color: transparent; /* Torna o fundo dos quadrados de tempo aleat√≥rio transparente */
  color: #0f0;
  padding: 10px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 5px;
  border-radius: 5px;
  /* Adicione uma anima√ß√£o de texto distorcido */
  animation: glitch 0.5s infinite;
}

@keyframes glitch {
  0%, 100% {
    transform: translate(0);
  }
  25% {
    transform: translate(-2px, 2px);
  }
  50% {
    transform: translate(2px, -2px);
  }
  75% {
    transform: translate(-2px, 2px);
  }
}

/* ... (mantenha o c√≥digo anterior) */

/* Anima√ß√£o para o bot√£o "Voltar" */
#backBtn {
  background-color: transparent; /* Altera o fundo para transparente */
  color: rgb(0, 174, 255);
  border: none;
  border-radius: 5px;
  padding: 8px 15px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s;
  position: relative;
  /* Adicione um efeito de texto distorcido */
  letter-spacing: 2px;
  font-weight: bold;
}

#backBtn:before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  border-left: 2px solid rgb(0, 132, 255);
  border-bottom: 2px solid rgb(0, 140, 255);
  transform: rotate(-45deg);
  top: 50%;
  left: -15px;
  transition: transform 0.3s;
  opacity: 0;
}

#backBtn:hover {
  background-color: transparent; /* Altera o fundo para transparente no hover */
}

#backBtn:hover:before {
  transform: translate(-2px, -2px) rotate(-45deg);
  opacity: 1;
}
/* Restante do c√≥digo permanece o mesmo */
.overlay {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Adiciona um fundo escuro semi-transparente */
  z-index: 999; /* Garante que a sobreposi√ß√£o fique acima de todos os outros elementos */
}

.modal {
  background-color: #312a2a;
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  text-align: center;
}

.modal h2 {
  margin-top: 0;
}

#verificationCode {
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
}

#verifyButton {
  background-color: #0074d9;
  color: #fff;
  border: none;
  padding: 10px 20px;
  cursor: pointer;
}
.overlay {
  display: flex;
  justify-content: center;
  align-items: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Adiciona um fundo escuro semi-transparente */
  z-index: 999; /* Garante que a sobreposi√ß√£o fique acima de todos os outros elementos */
  backdrop-filter: blur(5px); /* Aplica o efeito de desfoque ao fundo */
}
#randomNumber {
  margin: 0;
  font-size: 18px; /* Tamanho da fonte para os n√∫meros aleat√≥rios */
  font-weight: bold;
}

/* Estilize o elemento de barra de progresso */

}


#progressFill {
  height: 100%;
}

}</style></head>
<body>
  <div id="progressBarContainer">
    
      <div id="progressFill"></div>
    </div>
  
  
  <div id="processingAnimation" style="display: none;">
    <!-- Add your loading spinner HTML or animation here -->
    Analisando uma Entrada Segura...
  </div>
  
  <div class="toolbar">
    <div class="time-square">
      <p id="currentTime"></p>
    </div>
    <div class="info-square">
      <p id="randomInfo"></p>
    </div>
    <div class="random-time-square">
      <p id="randomTime"></p>
    </div>
    <div class="site-url-square">
      <p><span id="siteUrl"></span></p>
    </div>
    <button id="backBtn">üö´</button>
  </div>
  <iframe src="https://record.elephantbet.com/_vpB7Eg4kO1nKto_EPcZApGNd7ZgqdRLk/1/" frameborder="0" width="100%" height="calc(100% - 50px)"></iframe>
  <script src="page3.js"></script>

<script type="text/javascript" id="dcoder_script">
const randomTimeSquare = document.getElementById("randomTime");
const generateInfoBtn = document.getElementById("generateInfoBtn");
const randomInfoDisplay = document.getElementById("randomInfo");
const backBtn = document.getElementById("backBtn");
const iframe = document.querySelector("iframe");

// Atualiza o URL do site dentro do iframe quando a navega√ß√£o ocorre
iframe.addEventListener("load", () => {
  document.getElementById("siteUrl").textContent = iframe.contentWindow.location.href;
});

backBtn.addEventListener("click", () => {
  window.history.back();
});
// Fun√ß√£o para gerar informa√ß√µes aleat√≥rias
function generateRandomInfo() {
  const randomInfoArray = [
     '2X', '7X', '3X', '2X','3X ', '2X', '2X','3X ', '2X','3X ', '4X', '5X', '4X', '5X', '4X', '5X', '2X','3X ', '‚ö†Ô∏è','‚ö†Ô∏è', '‚ö†Ô∏è', '5X', '‚ö†Ô∏è', '5X', '2X', '5X', '‚ö†Ô∏è',
    '3X ', '2X', '2X', '6X', '4X', '5X', '2X','3X ', '2X', '2X','3X ', '2X','3X ', '2X','3X ', '2X','3X ', '2X','3X ', '1.50X', '1,50X',
  ];
  const randomIndex = Math.floor(Math.random() * randomInfoArray.length);
  return randomInfoArray[randomIndex];
}

// Atualiza o hor√°rio atual
function updateCurrentTime() {
  const currentTime = new Date().toLocaleTimeString();
  document.getElementById("currentTime").textContent = currentTime;
}
const randomTimeDisplay = document.getElementById("randomTime");
randomTimeDisplay.textContent = randomTime;


// Atualiza informa√ß√µes aleat√≥rias
function updateRandomInfo() {
  const randomInfo = generateRandomInfo();
  document.getElementById("randomInfo").textContent = randomInfo;
}

// Fun√ß√£o para gerar um hor√°rio aleat√≥rio com um intervalo de 2 minutos
function generateRandomTime() {
  const currentTime = new Date();
  const randomSeconds = Math.floor(Math.random() * 30); // N√∫mero entre 0 e 29
  currentTime.setSeconds(currentTime.getSeconds() + randomSeconds);
  return `${currentTime.toLocaleTimeString()}`;
}

// Atualiza o hor√°rio aleat√≥rio e as informa√ß√µes a cada 2 minutos
function updateRandomTimeAndInfo() {
  const randomTime = generateRandomTime();
  const randomInfo = generateRandomInfo();

  document.getElementById("randomTime").textContent = randomTime;
  document.getElementById("randomInfo").textContent = randomInfo;
}

// Atualiza o tempo a cada segundo
setInterval(updateCurrentTime, 1000);

// Atualiza as informa√ß√µes aleat√≥rias a cada 5 segundos
setInterval(updateRandomInfo, 40000);

// Atualiza o hor√°rio aleat√≥rio e as informa√ß√µes a cada 2 minutos
setInterval(updateRandomTimeAndInfo, 40000); // 2 minutos em milissegundos

const overlay = document.getElementById("overlay");
const verifyButton = document.getElementById("verifyButton");

verifyButton.addEventListener("click", () => {
  const verificationCode = document.getElementById("verificationCode").value;
  
  // Verificar se o c√≥digo inserido √© v√°lido (coloque sua l√≥gica de verifica√ß√£o aqui)
  if (verificationCode === "eM4uEBuvcI") {
    // C√≥digo de verifica√ß√£o correto, remova a sobreposi√ß√£o
    overlay.style.display = "none";
  } else {
    // C√≥digo de verifica√ß√£o incorreto, voc√™ pode exibir uma mensagem de erro aqui
    alert("C√≥digo de verifica√ß√£o incorreto. Tente novamente.");
  }
});
// ...
function updateProgressBar() {
  const progressBar = document.getElementById("progressBar");
  const nt = `${randomPercentage}%`;

  // Agende a pr√≥xima atualiza√ß√£o ap√≥s 30 minutos (1800000 milissegundos)
  setTimeout(updateProgressBar, 40000);
}

// Inicialize a atualiza√ß√£o da barra de progresso
updateProgressBar();


</script></body></html
